#include<stdio.h>

int n, m, p[10], w[10];

void greedy_knapsack() {
    float max, profit = 0;
    int k, i, j;
    printf("Items included are: ");
    for(i = 0; i < n; i++) {
        max = 0;
        // Choose the item which has the highest price to weight ratio
        for(j = 0; j < n; j++) {
            if(((float)p[j])/w[j] > max) {
                k = j;
                max = ((float)p[j])/w[j];
            }
        }
        // kth element has the highest price to weight ratio
        if(w[k] <= m) {
            printf("%d ", k);
            m = m - w[k];
            profit = profit + p[k];
            p[k] = 0;
        } else {
            break; // Unable to fit item k into knapsack
        }
    }
    printf("\nDiscrete Knapsack profit = %f\n", (float)profit);
    if(m > 0) {
        printf("Continuous Knapsack also includes item %d with portion: %f\n", k, (float)m/w[k]);
        profit = profit + ((float)m/w[k]) * p[k];
        printf("Continuous Knapsack profit = %f\n", (float)profit);
    }
}

int main() {
    int i;
    printf("Enter the number of items: ");
    scanf("%d", &n);
    printf("Enter the weights of %d items: ", n);
    for(i = 0; i < n; i++) {
        scanf("%d", &w[i]);
    }
    printf("Enter the prices of %d items: ", n);
    for(i = 0; i < n; i++) {
        scanf("%d", &p[i]);
    }
    printf("Enter the capacity of Knapsack: ");
    scanf("%d", &m);
    greedy_knapsack();
    return 0;
}
